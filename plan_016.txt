EXPLAIN (ANALYZE) SELECT "links"."link_type", "link_sets"."content_id", 
        EXISTS(
          SELECT nested_links.id
          FROM links AS nested_links
          INNER JOIN link_sets AS nested_link_sets
          ON nested_link_sets.id = nested_links.link_set_id
          WHERE 
          nested_link_sets.content_id = link_sets.content_id
          
          AND ((links.link_type = 'person' AND nested_links.link_type IN ('role')) OR (links.link_type = 'role' AND nested_links.link_type IN ('role')))
        
          LIMIT 1
        )
       FROM "links" INNER JOIN "link_sets" ON "link_sets"."content_id" = "links"."link_set_content_id" WHERE "links"."target_content_id" = $1 AND "links"."link_type" IN ($2, $3) AND 1=1 ORDER BY "links"."link_type" ASC, "links"."position" ASC [["target_content_id", "e830e2eb-5ebc-4142-bd32-c3ef6cae18c4"], ["link_type", "person"], ["link_type", "role"]]
                                                                                     QUERY PLAN
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=113.92..113.92 rows=1 width=40) (actual time=1.114..1.116 rows=1 loops=1)
   Sort Key: links.link_type, links."position"
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=0.99..113.91 rows=1 width=40) (actual time=1.106..1.112 rows=1 loops=1)
         ->  Index Scan using index_links_on_target_content_id_and_link_type on links  (cost=0.56..13.16 rows=1 width=39) (actual time=0.011..0.016 rows=1 loops=1)
               Index Cond: ((target_content_id = 'e830e2eb-5ebc-4142-bd32-c3ef6cae18c4'::uuid) AND ((link_type)::text = ANY ('{person,role}'::text[])))
         ->  Index Only Scan using index_link_sets_on_content_id on link_sets  (cost=0.42..4.44 rows=1 width=16) (actual time=0.009..0.009 rows=1 loops=1)
               Index Cond: (content_id = links.link_set_content_id)
               Heap Fetches: 0
         SubPlan 1
           ->  Result  (cost=84.26..96.31 rows=1 width=0) (actual time=1.083..1.084 rows=1 loops=1)
                 One-Time Filter: (((links.link_type)::text = 'person'::text) OR ((links.link_type)::text = 'role'::text))
                 ->  Nested Loop  (cost=84.26..96.31 rows=1 width=0) (actual time=1.082..1.083 rows=1 loops=1)
                       ->  Index Scan using index_link_sets_on_content_id on link_sets nested_link_sets  (cost=0.42..8.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                             Index Cond: (content_id = link_sets.content_id)
                       ->  Bitmap Heap Scan on links nested_links  (cost=83.83..87.85 rows=1 width=4) (actual time=1.074..1.074 rows=1 loops=1)
                             Recheck Cond: ((link_set_id = nested_link_sets.id) AND ((link_type)::text = 'role'::text))
                             Heap Blocks: exact=2
                             ->  BitmapAnd  (cost=83.83..83.83 rows=1 width=0) (actual time=1.070..1.070 rows=0 loops=1)
                                   ->  Bitmap Index Scan on index_links_on_link_set_id  (cost=0.00..5.29 rows=113 width=0) (actual time=0.012..0.012 rows=4 loops=1)
                                         Index Cond: (link_set_id = nested_link_sets.id)
                                   ->  Bitmap Index Scan on index_links_on_link_type  (cost=0.00..76.69 rows=6417 width=0) (actual time=1.053..1.053 rows=25584 loops=1)
                                         Index Cond: ((link_type)::text = 'role'::text)
 Planning Time: 0.354 ms
 Execution Time: 1.143 ms
(25 rows)
